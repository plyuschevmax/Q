import json
import subprocess
from agents.architect import analyze_repo_and_suggest_goal
import os


GOAL_STATE = "saci_goal_state.json"

def process_scan():
    try:
        subprocess.run(["python", "saci_remote_agent.py"])
        print("‚úÖ saci_remote_agent.py –∑–∞–≤–µ—Ä—à—ë–Ω")

        goal = analyze_repo_and_suggest_goal()
        with open(GOAL_STATE, "w") as f:
            json.dump({"status": "pending", "goal": goal}, f, indent=4)

        print(f"\nüéØ –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º–∞—è —Ü–µ–ª—å:\n{goal}\n")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ process_scan: {e}")
        return False

def show_goal_status():
    if not os.path.exists(GOAL_STATE):
        print("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Ü–µ–ª–∏.")
        return
    with open(GOAL_STATE) as f:
        data = json.load(f)
    print(f"\nüìå –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {data['status']}\nüéØ –¶–µ–ª—å: {data['goal']}")

if __name__ == "__main__":
    print("‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ SACI Goal Pipeline...\n")
    success = process_scan()
    if success:
        show_goal_status()
