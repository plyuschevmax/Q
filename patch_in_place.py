# patch_in_place.py

import os

TARGET_FILE = "saci_orchestrator/orchestrator.py"

METHOD_DEF = """
    def commit_with_log(self, file, content, message, log_file="SACI_LOG_TEMPLATE.md"):
        # –ö–æ–º–º–∏—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        self.commit_from_bot(file=file, content=content, message=message)

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥
        timestamp = datetime.utcnow().strftime("%Y-%m-%d %H:%M:%SZ")
        log_entry = f\"""\"
### üß† SACI-Agent
üïí {timestamp}  
üéØ {message}  
üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏—è:  
- `{file}` –æ–±–Ω–æ–≤–ª—ë–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
\"""\"

        try:
            if os.path.exists(log_file):
                with open(log_file, "r", encoding="utf-8") as f:
                    existing = f.read()
            else:
                existing = "# SACI Commit Log üìò\\n"

            updated_log = existing.strip() + "\\n\\n" + log_entry.strip() + "\\n"

            with open(log_file, "w", encoding="utf-8") as f:
                f.write(updated_log)

            self.commit_from_bot(
                file=log_file,
                content=updated_log,
                message=f"–û–±–Ω–æ–≤–ª—ë–Ω SACI-–ª–æ–≥ –ø–æ—Å–ª–µ –∫–æ–º–º–∏—Ç–∞ {file}"
            )

        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ SACI-–ª–æ–≥–∞: {e}")
"""

def patch_file():
    if not os.path.exists(TARGET_FILE):
        print("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:", TARGET_FILE)
        return

    with open(TARGET_FILE, "r", encoding="utf-8") as f:
        content = f.read()

    if "def commit_with_log(" in content:
        print("‚úÖ –ú–µ—Ç–æ–¥ `commit_with_log` —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–∞—Ç—á –Ω–µ –Ω—É–∂–µ–Ω.")
        return

    insert_point = content.rfind("def sync_after_commit(")
    if insert_point == -1:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –º–µ—Ç–æ–¥ `sync_after_commit`, –Ω–µ–∫—É–¥–∞ –≤—Å—Ç–∞–≤–ª—è—Ç—å.")
        return

    before = content[:insert_point]
    after = content[insert_point:]

    # –í—Å—Ç–∞–≤–∏–º –º–µ—Ç–æ–¥ –ø–æ—Å–ª–µ sync_after_commit
    updated = before + after + "\n\n" + METHOD_DEF.strip() + "\n"

    with open(TARGET_FILE, "w", encoding="utf-8") as f:
        f.write(updated)

    print("‚úÖ –ú–µ—Ç–æ–¥ `commit_with_log` –≤—Å—Ç–∞–≤–ª–µ–Ω –≤", TARGET_FILE)

if __name__ == "__main__":
    patch_file()
