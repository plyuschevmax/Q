import os
import json
import subprocess
import requests
from dotenv import load_dotenv

load_dotenv()

GOAL_STATE = "saci_goal_state.json"
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

def send_telegram_message(message):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    data = {"chat_id": CHAT_ID, "text": message}
    try:
        requests.post(url, data=data)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")

def run_tests():
    if not os.path.exists(GOAL_STATE):
        print("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Ü–µ–ª–∏.")
        return

    with open(GOAL_STATE) as f:
        data = json.load(f)

    if data["status"] != "done":
        print("‚ÑπÔ∏è –¶–µ–ª—å –µ—â—ë –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
        return

    if "test_patch_predictor.py" not in data["goal"]:
        print("‚ÑπÔ∏è –¢–µ–∫—É—â–∞—è —Ü–µ–ª—å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤.")
        return

    print("üß™ –ó–∞–ø—É—Å–∫ unittest –Ω–∞ tests/")
    result = subprocess.run(["python", "-m", "unittest", "discover", "tests"], capture_output=True, text=True)

    summary = "‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ." if result.returncode == 0 else "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ —Ç–µ—Å—Ç–∞—Ö."

    report = f"""üìä *SACI Test Report*
üéØ –¶–µ–ª—å: {data['goal']}
üì¶ –§–∞–π–ª: test_patch_predictor.py
üìã –†–µ–∑—É–ª—å—Ç–∞—Ç: {"‚úÖ PASSED" if result.returncode == 0 else "‚ùå FAILED"}
"""

    print(report)
    send_telegram_message(report)

if __name__ == "__main__":
    run_tests()
